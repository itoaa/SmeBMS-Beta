; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:attiny85_MK_II]
platform = atmelavr
board = attiny85
framework = arduino

; We may need to burn some boot flags first. FIX is needed

upload_protocol = custom
upload_port = usb
upload_flags =
    -C
    ; use "tool-avrdude-megaavr" for the atmelmegaavr platform
    ${platformio.packages_dir}/tool-avrdude/avrdude.conf
    -p
    $BOARD_MCU
    -P
    $UPLOAD_PORT
    -c
    stk500v2
;    dragon_isp
upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i

board_build.f_cpu = 1000000L
board_hardware.oscillator = internal
board_hardware.bod = disable
board_hardware.eesave = no






[env:attiny85_Dragon]
platform = atmelavr
board = attiny85
framework = arduino

;debug_tool = simavr
;debug_tool = avr_dragon??

; We may need to burn some boot flags first. FIX is needed

upload_protocol = custom
upload_port = usb
upload_flags =
    -C
    ; use "tool-avrdude-megaavr" for the atmelmegaavr platform
    ${platformio.packages_dir}/tool-avrdude/avrdude.conf
    -p
    $BOARD_MCU
    -P
    $UPLOAD_PORT
    -c
;    stk500v2
    dragon_isp
    
upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i

board_build.f_cpu = 1000000L
board_hardware.oscillator = internal
board_hardware.bod = disable
board_hardware.eesave = no





[env:attiny85_Dragon_dw]
platform = atmelavr
board = attiny85
framework = arduino

upload_protocol = dragon_dw

debug_tool = custom
debug_server = 
   avarice
  --dragon
  --debugwire
  :4242

board_build.f_cpu = 1000000L
board_hardware.oscillator = internal
board_hardware.bod = disable
board_hardware.eesave = no







[env:attiny85_Set_DebugWire_NEW]
platform = atmelavr
board = attiny85
framework = arduino


upload_protocol = custom
upload_port = usb
upload_flags =
    -C
    ; use "tool-avrdude-megaavr" for the atmelmegaavr platform
    ${platformio.packages_dir}/tool-avrdude/avrdude.conf
    -p
    $BOARD_MCU
    -P
    $UPLOAD_PORT
    -c
;    stk500v2
    dragon_isp
upload_command = avrdude $UPLOAD_FLAGS -U hfuse:w:0x9F:m    ; Burn DWEN, Debugwire enable 

board_build.f_cpu = 1000000L
board_hardware.oscillator = internal
board_hardware.bod = disable
board_hardware.eesave = no





[env:attiny85_Set_ISP_NEW]
platform = atmelavr
board = attiny85
framework = arduino


upload_protocol = custom
upload_port = usb
upload_flags =
    -C
    ; use "tool-avrdude-megaavr" for the atmelmegaavr platform
    ${platformio.packages_dir}/tool-avrdude/avrdude.conf
    -p
    $BOARD_MCU
    -P
    $UPLOAD_PORT
    -c
;    stk500v2
    dragon_isp
upload_command = avrdude $UPLOAD_FLAGS -U hfuse:w:0xDF:m    ; Burn DWEN, Debugwire disable 

board_build.f_cpu = 1000000L
board_hardware.oscillator = internal
board_hardware.bod = disable
board_hardware.eesave = no




[env:attiny85_upload_and_debug]
platform = atmelavr
board = attiny85
framework = arduino

; Uppladdningskonfiguration för programmering
upload_protocol = dragon_isp
upload_port = usb
upload_flags = -P$UPLOAD_PORT -B10
upload_speed = 19200

; Debug-konfiguration
debug_tool = custom
debug_server = 
  /usr/local/bin/avarice
 ; -g
 ; -j usb
  --dragon
  --mkII
  -2
  --erase
  --program
  --file $PROG_PATH
  -P attiny85  ; Justerad till attiny85
  :4242  ; Ange porten som avarice ska lyssna på

debug_init_cmds =
  define reset
  monitor reset halt
  end
  target remote :4242  ; Ange porten som avr-gdb ska ansluta till
  load
  file $PROG_PATH
  monitor reset halt







[env:attiny85_debug_wit_set_and_unset_fuse]
platform = atmelavr
board = attiny85
framework = arduino

; Uppladdningskonfiguration för programmering
upload_protocol = dragon_isp
upload_port = usb
upload_flags = -P$UPLOAD_PORT -B10
upload_speed = 19200

; Anpassad säkringskonfiguration för att aktivera debugWIRE
board_fuses.dwfuse = 0x00  ; Sätter DWEN-säkringen

; Debug-konfiguration
debug_tool = custom
debug_server = 
  /usr/bin/avarice
  --dragon
  --debugwire
 ; --erase
 ; --program
 ; --file $PROG_PATH
  -P attiny85
  :4242  ; Ange porten som avarice ska lyssna på
  
debug_init_cmds =
  define reset
  monitor reset halt
  end
  target remote :4242  ; Ange porten som avr-gdb ska ansluta till
  load
  file $PROG_PATH
  monitor reset halt

; Kommandon som körs efter att debug-sessionen är klar
;debug_exit_cmds =
 ; shell avrdude -p $BOARD_MCU -c dragon_isp -P $UPLOAD_PORT -U dwfuse:w:0xFF:m
